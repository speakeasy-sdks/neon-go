// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EndpointState - The state of the compute endpoint
type EndpointState string

const (
	EndpointStateInit   EndpointState = "init"
	EndpointStateActive EndpointState = "active"
	EndpointStateIdle   EndpointState = "idle"
)

func (e EndpointState) ToPointer() *EndpointState {
	return &e
}

func (e *EndpointState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "init":
		fallthrough
	case "active":
		fallthrough
	case "idle":
		*e = EndpointState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EndpointState: %v", v)
	}
}
