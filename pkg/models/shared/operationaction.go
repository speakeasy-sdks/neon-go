// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OperationAction - The action performed by the operation
type OperationAction string

const (
	OperationActionCreateCompute      OperationAction = "create_compute"
	OperationActionCreateTimeline     OperationAction = "create_timeline"
	OperationActionStartCompute       OperationAction = "start_compute"
	OperationActionSuspendCompute     OperationAction = "suspend_compute"
	OperationActionApplyConfig        OperationAction = "apply_config"
	OperationActionCheckAvailability  OperationAction = "check_availability"
	OperationActionDeleteTimeline     OperationAction = "delete_timeline"
	OperationActionCreateBranch       OperationAction = "create_branch"
	OperationActionTenantIgnore       OperationAction = "tenant_ignore"
	OperationActionTenantAttach       OperationAction = "tenant_attach"
	OperationActionTenantDetach       OperationAction = "tenant_detach"
	OperationActionTenantReattach     OperationAction = "tenant_reattach"
	OperationActionReplaceSafekeeper  OperationAction = "replace_safekeeper"
	OperationActionDisableMaintenance OperationAction = "disable_maintenance"
)

func (e OperationAction) ToPointer() *OperationAction {
	return &e
}

func (e *OperationAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create_compute":
		fallthrough
	case "create_timeline":
		fallthrough
	case "start_compute":
		fallthrough
	case "suspend_compute":
		fallthrough
	case "apply_config":
		fallthrough
	case "check_availability":
		fallthrough
	case "delete_timeline":
		fallthrough
	case "create_branch":
		fallthrough
	case "tenant_ignore":
		fallthrough
	case "tenant_attach":
		fallthrough
	case "tenant_detach":
		fallthrough
	case "tenant_reattach":
		fallthrough
	case "replace_safekeeper":
		fallthrough
	case "disable_maintenance":
		*e = OperationAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperationAction: %v", v)
	}
}
