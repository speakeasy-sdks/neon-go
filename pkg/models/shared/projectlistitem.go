// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// ProjectListItem - Essential data about the project. Full data is available at the getProject endpoint.
type ProjectListItem struct {
	// Control plane observed endpoints of this project being active this amount of wall-clock time.
	//
	ActiveTime int64 `json:"active_time"`
	// The logical size limit for a branch. The value is in MiB.
	//
	BranchLogicalSizeLimit int64 `json:"branch_logical_size_limit"`
	// The logical size limit for a branch. The value is in B.
	//
	BranchLogicalSizeLimitBytes int64 `json:"branch_logical_size_limit_bytes"`
	// DEPRECATED, use data from the getProject endpoint instead.
	//
	CPUUsedSec int64 `json:"cpu_used_sec"`
	// A timestamp indicating when the project was created
	//
	CreatedAt time.Time `json:"created_at"`
	// The project creation source
	//
	CreationSource string `json:"creation_source"`
	// A collection of settings for a Neon endpoint
	DefaultEndpointSettings *DefaultEndpointSettings `json:"default_endpoint_settings,omitempty"`
	// The project ID
	//
	ID string `json:"id"`
	// A timestamp indicating when project maintenance begins. If set, the project is placed into maintenance mode at this time.
	//
	MaintenanceStartsAt *time.Time `json:"maintenance_starts_at,omitempty"`
	// The project name
	//
	Name    string            `json:"name"`
	Owner   *ProjectOwnerData `json:"owner,omitempty"`
	OwnerID string            `json:"owner_id"`
	// The major PostgreSQL version number. Currently supported version are `14` and `15`.
	PgVersion int64 `json:"pg_version"`
	// The cloud platform identifier. Currently, only AWS is supported, for which the identifier is `aws`.
	//
	PlatformID string `json:"platform_id"`
	// The Neon compute provisioner.
	//
	Provisioner Provisioner `json:"provisioner"`
	// The proxy host for the project. This value combines the `region_id`, the `platform_id`, and the Neon domain (`neon.tech`).
	//
	ProxyHost string `json:"proxy_host"`
	// DEPRECATED. Use `consumption_period_end` from the getProject endpoint instead.
	// A timestamp indicating when the project quota resets
	//
	QuotaResetAt *time.Time `json:"quota_reset_at,omitempty"`
	// The region identifier
	//
	RegionID string               `json:"region_id"`
	Settings *ProjectSettingsData `json:"settings,omitempty"`
	// Whether or not passwords are stored for roles in the Neon project. Storing passwords facilitates access to Neon features that require authorization.
	//
	StorePasswords bool `json:"store_passwords"`
	// Experimental. Do not use this field yet.
	// The data storage size in bytes.
	//
	SyntheticStorageSize *int64 `json:"synthetic_storage_size,omitempty"`
	// A timestamp indicating when the project was last updated
	//
	UpdatedAt time.Time `json:"updated_at"`
}
