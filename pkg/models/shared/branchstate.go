// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BranchState - The branch state
type BranchState string

const (
	BranchStateInit  BranchState = "init"
	BranchStateReady BranchState = "ready"
)

func (e BranchState) ToPointer() *BranchState {
	return &e
}

func (e *BranchState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "init":
		fallthrough
	case "ready":
		*e = BranchState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BranchState: %v", v)
	}
}
